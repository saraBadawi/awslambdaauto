name: Deploy Lambda Function
on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: MySimpleLambdaFunction
  AWS_ROLE_TO_ASSUME: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_LAMBDA_ROLE }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          pip install awscli pytest

      - name: Run unit tests
        run: |
          python -m unittest discover -s . -p "test_*.py"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActionsLambdaDeployment

      - name: Zip the Lambda function
        run: zip function.zip lambda_function.py

      - name: Check if Lambda function exists
        id: check_lambda
        continue-on-error: true
        run: |
          if aws lambda get-function --function-name ${{ env.LAMBDA_FUNCTION_NAME }}; then
            echo "LAMBDA_EXISTS=true" >> $GITHUB_ENV
          else
            echo "LAMBDA_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create or Update Lambda function
        run: |
          if [ "$LAMBDA_EXISTS" == "false" ]; then
            echo "Creating Lambda function..."
            aws lambda create-function \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --runtime python3.8 \
              --role ${{ env.AWS_ROLE_TO_ASSUME }} \
              --handler lambda_function.lambda_handler \
              --zip-file fileb://function.zip
          else
            echo "Updating Lambda function..."
            aws lambda update-function-code \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --zip-file fileb://lambdaauto.zip --publish
          fi

      - name: Clean up
        run: rm lambdaauto.zip
